"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome\uff01","href":"/272_help/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Key Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Understanding MVC","href":"/272_help/docs/Key-Concepts/create-a-page","docId":"Key-Concepts/create-a-page","unlisted":false},{"type":"link","label":"MVC in Ruby on Rails","href":"/272_help/docs/Key-Concepts/create-a-document","docId":"Key-Concepts/create-a-document","unlisted":false},{"type":"link","label":"CRUD Operations","href":"/272_help/docs/Key-Concepts/create-a-blog-post","docId":"Key-Concepts/create-a-blog-post","unlisted":false},{"type":"link","label":"Ruby Gems","href":"/272_help/docs/Key-Concepts/deploy-your-site","docId":"Key-Concepts/deploy-your-site","unlisted":false},{"type":"link","label":"Relations, Scopes and Validations","href":"/272_help/docs/Key-Concepts/markdown-features","docId":"Key-Concepts/markdown-features","unlisted":false},{"type":"link","label":"Congratulations!","href":"/272_help/docs/Key-Concepts/congratulations","docId":"Key-Concepts/congratulations","unlisted":false}],"href":"/272_help/docs/category/key-concepts"},{"type":"category","label":"Ruby on Rails","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Database Operations","href":"/272_help/docs/tutorial-extras/manage-docs-versions","docId":"tutorial-extras/manage-docs-versions","unlisted":false},{"type":"link","label":"Models in Ruby","href":"/272_help/docs/tutorial-extras/translate-your-site","docId":"tutorial-extras/translate-your-site","unlisted":false},{"type":"link","label":"Views in Ruby","href":"/272_help/docs/tutorial-extras/views-in-ruby","docId":"tutorial-extras/views-in-ruby","unlisted":false},{"type":"link","label":"Testing","href":"/272_help/docs/tutorial-extras/controller-in-ruby","docId":"tutorial-extras/controller-in-ruby","unlisted":false},{"type":"link","label":"APIs","href":"/272_help/docs/tutorial-extras/api","docId":"tutorial-extras/api","unlisted":false}],"href":"/272_help/docs/category/ruby-on-rails"}]},"docs":{"intro":{"id":"intro","title":"Welcome\uff01","description":"In this tutorial, you will learn the basics of 67-272.","sidebar":"tutorialSidebar"},"Key-Concepts/congratulations":{"id":"Key-Concepts/congratulations","title":"Congratulations!","description":"You have just learned the basics of Ruby of Rails.","sidebar":"tutorialSidebar"},"Key-Concepts/create-a-blog-post":{"id":"Key-Concepts/create-a-blog-post","title":"CRUD Operations","description":"CRUD refers to the four basic operations a software application should be able to perform \u2013 Create, Read, Update, and Delete.","sidebar":"tutorialSidebar"},"Key-Concepts/create-a-document":{"id":"Key-Concepts/create-a-document","title":"MVC in Ruby on Rails","description":"Ruby on Rails (Rails) is a web application framework that is built upon the MVC architecture, making it a prime example of MVC in action. Rails takes the concept of MVC and provides a structured environment where each component of the MVC framework has a specific convention and path within a Rails project. This section dives into how MVC manifests within the Rails ecosystem, emphasizing the framework\'s conventions that streamline web application development.","sidebar":"tutorialSidebar"},"Key-Concepts/create-a-page":{"id":"Key-Concepts/create-a-page","title":"Understanding MVC","description":"To know the Model-View-Controller, you must be the Models, Views and Controllers...","sidebar":"tutorialSidebar"},"Key-Concepts/deploy-your-site":{"id":"Key-Concepts/deploy-your-site","title":"Ruby Gems","description":"Programming is about abstraction, creating layers that hide complexity and allow developers to focus on logic rather than low-level details. Gems in Ruby serve as a perfect example of this principle, encapsulating functionality into reusable packages.","sidebar":"tutorialSidebar"},"Key-Concepts/markdown-features":{"id":"Key-Concepts/markdown-features","title":"Relations, Scopes and Validations","description":"Relations","sidebar":"tutorialSidebar"},"tutorial-extras/api":{"id":"tutorial-extras/api","title":"APIs","description":"An API is a set of protocols that enable different software components to communicate","sidebar":"tutorialSidebar"},"tutorial-extras/controller-in-ruby":{"id":"tutorial-extras/controller-in-ruby","title":"Testing","description":"Testing is an integral part of the Rails framework, designed to ensure that your application performs correctly under specified conditions and continues to do so as changes are made.","sidebar":"tutorialSidebar"},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Database Operations","description":"Basic rails commands","sidebar":"tutorialSidebar"},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Models in Ruby","description":"Creating models in Ruby on Rails is essential as they form the core of your application\'s business logic. Models in Rails use ActiveRecord, an Object-Relational Mapping (ORM) system, allowing models to interact with the database in an object-oriented manner. Here, we\'ll discuss writing models by exploring the example of an Officer model, covering key concepts and functionality.","sidebar":"tutorialSidebar"},"tutorial-extras/views-in-ruby":{"id":"tutorial-extras/views-in-ruby","title":"Views in Ruby","description":"Views in Ruby on Rails are typically built using HTML and embedded Ruby (ERB) code. They are responsible for displaying the data passed by the controllers to the users. Views are located in the app/views folder, and are organized based on the controller they are associated with.","sidebar":"tutorialSidebar"}}}')}}]);